{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { ImagePopup } from './ImagePopup';\nimport { ConfirmPopup } from './ConfirmPopup';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // попапы\n  const [isEditProfilePopupOpen, setEditProfileState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceState] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarState] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isConfirmPopupOpen, setConfirmPopupState] = useState(false); // пользователь\n\n  const [currentUser, setCurrentUserState] = useState({});\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, cardData]) => {\n      setCurrentUserState(userData); //setCardsState(cardData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // открытие и закрытие попапов\n\n  function handleEditProfileClick() {\n    setEditProfileState(true);\n  }\n\n  ;\n\n  function handleAddPlaceClick() {\n    setAddPlaceState(true);\n  }\n\n  ;\n\n  function handleEditAvatarClick() {\n    setEditAvatarState(true);\n  }\n\n  ;\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  ;\n\n  function handleDeleteClick() {\n    setConfirmPopupState(true);\n  }\n\n  ;\n\n  function closeAllPopups() {\n    setEditProfileState(false);\n    setAddPlaceState(false);\n    setEditAvatarState(false);\n    setSelectedCard(null);\n    setConfirmPopupState(false);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: \"currentUser\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onDeleteClick: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: !!selectedCard && selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n        isOpen: isConfirmPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"r131gPMd2B7EFoBX29DFKLljzoo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Documents/dev/mesto-react/src/components/App.js"],"names":["useState","Footer","Header","Main","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ImagePopup","ConfirmPopup","api","CurrentUserContext","App","isEditProfilePopupOpen","setEditProfileState","isAddPlacePopupOpen","setAddPlaceState","isEditAvatarPopupOpen","setEditAvatarState","selectedCard","setSelectedCard","isConfirmPopupOpen","setConfirmPopupState","currentUser","setCurrentUserState","useEffect","Promise","all","getUserInfo","getInitialCards","then","userData","cardData","catch","err","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","handleDeleteClick","closeAllPopups"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { ImagePopup } from './ImagePopup';\nimport { ConfirmPopup } from './ConfirmPopup';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  // попапы\n  const [isEditProfilePopupOpen, setEditProfileState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceState] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarState] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isConfirmPopupOpen, setConfirmPopupState] = useState(false);\n  \n  // пользователь\n  const [currentUser, setCurrentUserState] = useState({});\n\n  useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards(),\n    ])\n    .then(([userData, cardData]) => {\n      setCurrentUserState(userData);\n\n      //setCardsState(cardData);\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, []);\n\n  // открытие и закрытие попапов\n  function handleEditProfileClick() {\n    setEditProfileState(true);\n  };\n  function handleAddPlaceClick() {\n    setAddPlaceState(true);\n  };\n  function handleEditAvatarClick() {\n    setEditAvatarState(true);\n  };\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n  function handleDeleteClick() {\n    setConfirmPopupState(true);\n  };\n\n  function closeAllPopups() {\n    setEditProfileState(false);\n    setAddPlaceState(false);\n    setEditAvatarState(false);\n    setSelectedCard(null);\n    setConfirmPopupState(false);\n  };\n\n  return (\n    <CurrentUserContext.Provider value=\"currentUser\">\n    <div className=\"page\">\n      <Header />\n\n      <Main \n      onEditProfile = {handleEditProfileClick} \n      onAddPlace = {handleAddPlaceClick}\n      onEditAvatar = {handleEditAvatarClick}\n      onCardClick = {handleCardClick}\n      onDeleteClick = {handleDeleteClick}\n      />\n\n      <Footer />\n\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n      <ImagePopup card={!!selectedCard && selectedCard} onClose={closeAllPopups} />\n      <ConfirmPopup isOpen={isConfirmPopupOpen} onClose={closeAllPopups} />\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}