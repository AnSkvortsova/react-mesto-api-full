{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Documents/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Documents/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_checkResult\",value:function _checkResult(response){if(response.ok){return response.json();};return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(response.status));}},{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(function(response){return _this._checkResult(response);});}},{key:\"pushUserInfo\",value:function pushUserInfo(data){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(function(response){return _this2._checkResult(response);});}},{key:\"getInitialCards\",value:function getInitialCards(){var _this3=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(function(response){return _this3._checkResult(response);});}},{key:\"pushNewCard\",value:function pushNewCard(data){var _this4=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(function(response){return _this4._checkResult(response);});}},{key:\"setLikeCard\",value:function setLikeCard(id,isLike){var _this5=this;var status=isLike?'DELETE':'PUT';return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(id),{method:status,headers:this._headers}).then(function(response){return _this5._checkResult(response);});}},{key:\"removeCard\",value:function removeCard(id){var _this6=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(function(response){return _this6._checkResult(response);});}},{key:\"updateAvatar\",value:function updateAvatar(data){var _this7=this;return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(function(response){return _this7._checkResult(response);});}}]);return Api;}();var options={baseUrl:'http://localhost:3000',headers:{'Content-Type':'application/json'}};var api=new Api(options);export default api;","map":{"version":3,"sources":["/Users/mac/Documents/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","options","_baseUrl","baseUrl","_headers","headers","response","ok","json","Promise","reject","status","fetch","then","_checkResult","data","method","body","JSON","stringify","name","about","link","id","isLike","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResult(response) {\n    if(response.ok) {\n      return response.json();\n    };\n    return Promise.reject(`Ошибка: ${response.status}`);\n  };\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n    .then(response => this._checkResult(response));\n  };\n\n  pushUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      })\n    })\n    .then(response => this._checkResult(response));\n  };\n  \n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n    .then(response => this._checkResult(response));\n  };\n\n  pushNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      })\n    })\n    .then(response => this._checkResult(response));\n  };\n\n  setLikeCard(id, isLike) {\n    const status = isLike ? 'DELETE' : 'PUT'\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: status,\n      headers: this._headers,\n    })\n    .then(response => this._checkResult(response));\n  };\n\n  removeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(response => this._checkResult(response));\n  };\n\n  updateAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n    .then(response => this._checkResult(response));\n  }\n}\n\nconst options = {\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json',\n  }\n}\nconst api = new Api(options);\nexport default api;"]},"metadata":{},"sourceType":"module"}