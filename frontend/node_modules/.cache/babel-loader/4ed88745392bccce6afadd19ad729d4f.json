{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { ImagePopup } from './ImagePopup';\nimport { ConfirmPopup } from './ConfirmPopup';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // попапы\n  const [isEditProfilePopupOpen, setEditProfileState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceState] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarState] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isConfirmPopupOpen, setConfirmPopupState] = useState(false); // пользователь\n\n  const [currentUser, setCurrentUserState] = useState({});\n  const [cards, setCardsState] = useState([]); //useEffect(() => {\n  //  \n  //    api.getUserInfo()\n  //  \n  //  .then((userData) => {\n  //    setCurrentUserState(userData);\n  //  })\n  //  .catch((err) => {\n  //    console.log(err)\n  //  })\n  //}, []);\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, cardData]) => {\n      setCurrentUserState(userData);\n      setCardsState(cardData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // открытие и закрытие попапов\n\n  function handleEditProfileClick() {\n    setEditProfileState(true);\n  }\n\n  ;\n\n  function handleAddPlaceClick() {\n    setAddPlaceState(true);\n  }\n\n  ;\n\n  function handleEditAvatarClick() {\n    setEditAvatarState(true);\n  }\n\n  ;\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  ;\n\n  function handleDeleteClick() {\n    setConfirmPopupState(true);\n  }\n\n  ;\n\n  function closeAllPopups() {\n    setEditProfileState(false);\n    setAddPlaceState(false);\n    setEditAvatarState(false);\n    setSelectedCard(null);\n    setConfirmPopupState(false);\n  }\n\n  ;\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.setLikeCard(card._id, !isLiked).then(newCard => {\n      setCardsState(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        cards: cards,\n        onCardClick: handleCardClick,\n        onDeleteClick: handleDeleteClick,\n        onCardLike: handleCardLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: !!selectedCard && selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n        isOpen: isConfirmPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qYP6sKLfc8/WdWYkP2etx6SMm3I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Documents/dev/mesto-react/src/components/App.js"],"names":["useState","useEffect","Footer","Header","Main","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ImagePopup","ConfirmPopup","api","CurrentUserContext","App","isEditProfilePopupOpen","setEditProfileState","isAddPlacePopupOpen","setAddPlaceState","isEditAvatarPopupOpen","setEditAvatarState","selectedCard","setSelectedCard","isConfirmPopupOpen","setConfirmPopupState","currentUser","setCurrentUserState","cards","setCardsState","Promise","all","getUserInfo","getInitialCards","then","userData","cardData","catch","err","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","handleDeleteClick","closeAllPopups","handleCardLike","isLiked","likes","some","i","_id","setLikeCard","newCard","state","map","c"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { ImagePopup } from './ImagePopup';\nimport { ConfirmPopup } from './ConfirmPopup';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  // попапы\n  const [isEditProfilePopupOpen, setEditProfileState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceState] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarState] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isConfirmPopupOpen, setConfirmPopupState] = useState(false);\n  \n  // пользователь\n  const [currentUser, setCurrentUserState] = useState({});\n  const [cards, setCardsState] = useState([]);\n\n  //useEffect(() => {\n  //  \n  //    api.getUserInfo()\n  //  \n  //  .then((userData) => {\n  //    setCurrentUserState(userData);\n  //  })\n  //  .catch((err) => {\n  //    console.log(err)\n  //  })\n  //}, []);\n  useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards(),\n    ])\n    .then(([userData, cardData]) => {\n      setCurrentUserState(userData);\n\n      setCardsState(cardData);\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, []);\n\n  // открытие и закрытие попапов\n  function handleEditProfileClick() {\n    setEditProfileState(true);\n  };\n  function handleAddPlaceClick() {\n    setAddPlaceState(true);\n  };\n  function handleEditAvatarClick() {\n    setEditAvatarState(true);\n  };\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n  function handleDeleteClick() {\n    setConfirmPopupState(true);\n  };\n\n  function closeAllPopups() {\n    setEditProfileState(false);\n    setAddPlaceState(false);\n    setEditAvatarState(false);\n    setSelectedCard(null);\n    setConfirmPopupState(false);\n  };\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.setLikeCard(card._id, !isLiked)\n    .then((newCard) => {\n      setCardsState((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n      <Header />\n\n      <Main \n      onEditProfile = {handleEditProfileClick} \n      onAddPlace = {handleAddPlaceClick}\n      onEditAvatar = {handleEditAvatarClick}\n      cards = {cards}\n      onCardClick = {handleCardClick}\n      onDeleteClick = {handleDeleteClick}\n      onCardLike = {handleCardLike}\n      />\n\n      <Footer />\n\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n      <ImagePopup card={!!selectedCard && selectedCard} onClose={closeAllPopups} />\n      <ConfirmPopup isOpen={isConfirmPopupOpen} onClose={closeAllPopups} />\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}