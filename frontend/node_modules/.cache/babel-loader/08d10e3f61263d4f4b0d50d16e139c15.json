{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [profileFormValues, setProfileFormValues] = useState({\n    userName: '',\n    userDescription: ''\n  });\n  const {\n    userName,\n    userDescription\n  } = profileFormValues;\n  const handleInputChange = useCallback(evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setProfileFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setProfileFormValues]); //const [userName, setUserName] = useState('');\n  //const [userDescription, setUserDescription] = useState('');\n  //useEffect(() => {\n  //  setUserName(currentUser.name);\n  //  setUserDescription(currentUser.about);\n  //}, [currentUser]);\n  //function handleChangeName(evt) {\n  //  setUserName(evt.target.value)\n  //};\n  //function handleChangeDescription(evt) {\n  //  setUserDescription(evt.target.value)\n  //};\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name: userName,\n      about: userDescription\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      id: \"input-name\",\n      name: \"userName\",\n      type: \"text\",\n      value: userName,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error\",\n      id: \"input-name-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      id: \"input-job\",\n      name: \"userJob\",\n      type: \"text\",\n      value: userDescription,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error\",\n      id: \"input-job-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"6TBaRmQTuM8tqQ3PjzWZpJahZlc=\");\n\n_c = EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/mac/Documents/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","useCallback","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","profileFormValues","setProfileFormValues","userName","userDescription","handleInputChange","evt","name","value","target","prevState","handleSubmit","preventDefault","onUpdateUser","about","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AACtC,QAAMC,WAAW,GAAGR,KAAK,CAACS,UAAN,CAAiBJ,kBAAjB,CAApB;AAEA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC;AACzDW,IAAAA,QAAQ,EAAE,EAD+C;AAEzDC,IAAAA,eAAe,EAAE;AAFwC,GAAD,CAA1D;AAKA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAgCH,iBAAtC;AAEA,QAAMI,iBAAiB,GAAGX,WAAW,CAAEY,GAAD,IAAS;AAC7C,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,GAAG,CAACG,MAA5B;AACAP,IAAAA,oBAAoB,CAACQ,SAAS,KAAK,EAAE,GAAGA,SAAL;AAAgB,OAACH,IAAD,GAAQC;AAAxB,KAAL,CAAV,CAApB;AACD,GAHoC,EAGlC,CAACN,oBAAD,CAHkC,CAArC,CAVsC,CAetC;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASS,YAAT,CAAsBL,GAAtB,EAA2B;AACzBA,IAAAA,GAAG,CAACM,cAAJ;AACAd,IAAAA,KAAK,CAACe,YAAN,CAAmB;AACjBN,MAAAA,IAAI,EAAEJ,QADW;AAEjBW,MAAAA,KAAK,EAAEV;AAFU,KAAnB;AAID;;AAAA;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,2HAAjC;AAAyD,IAAA,MAAM,EAAC,wDAAhE;AACA,IAAA,MAAM,EAAEN,KAAK,CAACiB,MADd;AAEA,IAAA,OAAO,EAAEjB,KAAK,CAACkB,OAFf;AAGA,IAAA,QAAQ,EAAEL,YAHV;AAAA,4BAIE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,SAAS,EAAC,GAA1C;AAA8C,MAAA,SAAS,EAAC,IAAxD;AAA6D,MAAA,EAAE,EAAC,YAAhE;AAA6E,MAAA,IAAI,EAAC,UAAlF;AAA6F,MAAA,IAAI,EAAC,MAAlG;AAAyG,MAAA,KAAK,EAAER,QAAhH;AAA0H,MAAA,QAAQ,EAAEE,iBAApI;AAAuJ,MAAA,QAAQ;AAA/J;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,EAAE,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,SAAS,EAAC,GAA1C;AAA8C,MAAA,SAAS,EAAC,KAAxD;AAA8D,MAAA,EAAE,EAAC,WAAjE;AAA6E,MAAA,IAAI,EAAC,SAAlF;AAA4F,MAAA,IAAI,EAAC,MAAjG;AAAwG,MAAA,KAAK,EAAED,eAA/G;AAAgI,MAAA,QAAQ,EAAEC,iBAA1I;AAA6J,MAAA,QAAQ;AAArK;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,EAAE,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhDeR,gB;;KAAAA,gB","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nexport function EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [profileFormValues, setProfileFormValues] = useState({\n    userName: '',\n    userDescription: '',\n  });\n\n  const { userName, userDescription } = profileFormValues;\n\n  const handleInputChange = useCallback((evt) => {\n    const { name, value } = evt.target;\n    setProfileFormValues(prevState => ({ ...prevState, [name]: value }));\n  }, [setProfileFormValues]);\n\n  //const [userName, setUserName] = useState('');\n  //const [userDescription, setUserDescription] = useState('');\n\n  //useEffect(() => {\n  //  setUserName(currentUser.name);\n  //  setUserDescription(currentUser.about);\n  //}, [currentUser]);\n\n  //function handleChangeName(evt) {\n  //  setUserName(evt.target.value)\n  //};\n  //function handleChangeDescription(evt) {\n  //  setUserDescription(evt.target.value)\n  //};\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name: userName,\n      about: userDescription,\n    })\n  };\n\n  return(\n    <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" button=\"Сохранить\" \n    isOpen={props.isOpen} \n    onClose={props.onClose}\n    onSubmit={handleSubmit} >\n      <input className=\"popup__input\" minLength=\"2\" maxLength=\"40\" id=\"input-name\" name=\"userName\" type=\"text\" value={userName} onChange={handleInputChange} required />\n      <span className=\"popup__input-error\" id=\"input-name-error\"></span>\n      <input className=\"popup__input\" minLength=\"2\" maxLength=\"200\" id=\"input-job\" name=\"userJob\" type=\"text\" value={userDescription} onChange={handleInputChange} required />\n      <span className=\"popup__input-error\" id=\"input-job-error\"></span>\n    </PopupWithForm>\n  ); \n}"]},"metadata":{},"sourceType":"module"}