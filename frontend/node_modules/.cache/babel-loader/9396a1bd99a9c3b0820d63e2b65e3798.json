{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResult = response => {\n  try {\n    if (response.status === 200) {\n      return response.json();\n    }\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => checkResult(response));\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => checkResult(response)).then(data => {\n    let token = localStorage.setItem('token', data.token);\n    return token;\n  }).catch(err => console.log(err));\n};\nexport const getAuthData = token => {\n  return fetch(`${BASE_URL}//users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${localStorage.getItem(token)}`\n    }\n  }).then(response => checkResult(response));\n};","map":{"version":3,"sources":["/Users/mac/Documents/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","checkResult","response","status","json","err","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","data","token","localStorage","setItem","catch","console","log","getAuthData","getItem"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,MAAI;AACF,QAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AAC1B,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,GAJD,CAIE,OAAMC,GAAN,EAAW;AACX,WAAOA,GAAP;AACD;AACF,CARD;;AAUA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAET,QAAS,SAAb,EAAuB;AACjCU,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAL2B,GAAvB,CAAL,CAONO,IAPM,CAOAb,QAAD,IAAcD,WAAW,CAACC,QAAD,CAPxB,CAAP;AAQD,CATM;AAWP,OAAO,MAAMc,SAAS,GAAG,CAACT,QAAD,EAAWC,KAAX,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAET,QAAS,SAAb,EAAuB;AACjCU,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAL2B,GAAvB,CAAL,CAONO,IAPM,CAOAb,QAAD,IAAcD,WAAW,CAACC,QAAD,CAPxB,EAQNa,IARM,CAQAE,IAAD,IAAU;AACd,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,KAAnC,CAAZ;AACA,WAAOA,KAAP;AACD,GAXM,EAYNG,KAZM,CAYChB,GAAD,IAASiB,OAAO,CAACC,GAAR,CAAYlB,GAAZ,CAZT,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMmB,WAAW,GAAIN,KAAD,IAAW;AACpC,SAAOT,KAAK,CAAE,GAAET,QAAS,YAAb,EAA0B;AACpCU,IAAAA,MAAM,EAAE,KAD4B;AAEpCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAmB,UAASQ,YAAY,CAACM,OAAb,CAAqBP,KAArB,CAA4B;AAFjD;AAF2B,GAA1B,CAAL,CAONH,IAPM,CAOAb,QAAD,IAAcD,WAAW,CAACC,QAAD,CAPxB,CAAP;AAQD,CATM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResult = (response) => {\n  try {\n    if(response.status === 200) {\n      return response.json();\n    }\n  } catch(err) {\n    return(err);\n  }\n}\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({password, email}),\n  })\n  .then((response) => checkResult(response))\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({password, email}),\n  })\n  .then((response) => checkResult(response))\n  .then((data) => {\n    let token = localStorage.setItem('token', data.token);\n    return token\n  })\n  .catch((err) => console.log(err));\n};\n\nexport const getAuthData = (token) => {\n  return fetch(`${BASE_URL}//users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\" : `Bearer ${localStorage.getItem(token)}`,\n    },\n  })\n  .then((response) => checkResult(response))\n};"]},"metadata":{},"sourceType":"module"}