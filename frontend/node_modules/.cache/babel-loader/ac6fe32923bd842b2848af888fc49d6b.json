{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  console.log(currentUser);\n  const [profileFormValues, setProfileFormValues] = useState({\n    userName: '',\n    userDescription: ''\n  });\n  const [profileFormValidity, setProfileFormValidity] = useState({\n    userNameValid: false,\n    userDescriptionValid: false\n  });\n  const handleInputChange = useCallback(evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setProfileFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setProfileFormValues]);\n  useEffect(() => {\n    console.log(\"SETUP VALUES\", JSON.stringify(currentUser));\n    setProfileFormValues({\n      userName: currentUser.userName,\n      userDescription: currentUser.userDescription\n    });\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name: userName,\n      about: userDescription\n    });\n  }\n\n  ;\n  useEffect(function validateInputs() {\n    const isUserNameFilled = profileFormValues.userName.length > 2;\n    const isUserNameValid = isUserNameFilled;\n    const isUserDescriptionFilled = profileFormValues.userDescription.length > 2;\n    const isUserDescriptionValid = isUserDescriptionFilled;\n    setProfileFormValidity(prevValidity => ({\n      userNameValid: isUserNameValid,\n      userDescriptionValid: isUserDescriptionValid\n    }));\n  }, [profileFormValues, setProfileFormValidity]);\n  const {\n    userName,\n    userDescription\n  } = profileFormValues;\n  const {\n    userNameValid,\n    userDescriptionValid\n  } = profileFormValidity;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [!userNameValid && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" userName invalid \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      id: \"input-name\",\n      name: \"userName\",\n      type: \"text\",\n      value: userName || '',\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error\",\n      id: \"input-name-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !userDescriptionValid && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" userDescription invalid \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      id: \"input-job\",\n      name: \"userJob\",\n      type: \"text\",\n      value: userDescription || '',\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error\",\n      id: \"input-job-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"VQPyCVOK4VgSpHffvQowsz81FwA=\");\n\n_c = EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/mac/Documents/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","useCallback","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","console","log","profileFormValues","setProfileFormValues","userName","userDescription","profileFormValidity","setProfileFormValidity","userNameValid","userDescriptionValid","handleInputChange","evt","name","value","target","prevState","JSON","stringify","isOpen","handleSubmit","preventDefault","onUpdateUser","about","validateInputs","isUserNameFilled","length","isUserNameValid","isUserDescriptionFilled","isUserDescriptionValid","prevValidity","onClose"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nexport function EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  console.log(currentUser)\n\n  const [profileFormValues, setProfileFormValues] = useState({\n    userName: '',\n    userDescription: '',\n  });\n\n  const [profileFormValidity, setProfileFormValidity] = useState({\n    userNameValid: false,\n    userDescriptionValid: false,\n  });\n\n  const handleInputChange = useCallback((evt) => {\n    const { name, value } = evt.target;\n    setProfileFormValues(prevState => ({ ...prevState, [name]: value }));\n  }, [setProfileFormValues]);\n\n\n  \n  useEffect(() => {\n    console.log(\"SETUP VALUES\", JSON.stringify(currentUser));\n    setProfileFormValues({\n      userName: currentUser.userName,\n      userDescription: currentUser.userDescription,\n    })\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name: userName,\n      about: userDescription,\n    })\n  };\n\n  useEffect(\n    function validateInputs() {\n    const isUserNameFilled = profileFormValues.userName.length > 2;\n    const isUserNameValid = isUserNameFilled;\n\n    const isUserDescriptionFilled = profileFormValues.userDescription.length > 2;\n    const isUserDescriptionValid = isUserDescriptionFilled;\n\n    setProfileFormValidity((prevValidity) => ({\n      userNameValid: isUserNameValid,\n      userDescriptionValid: isUserDescriptionValid,\n    }));\n  }, \n  [profileFormValues, setProfileFormValidity]);\n\n  const { userName, userDescription } = profileFormValues;\n  const { userNameValid, userDescriptionValid } = profileFormValidity;\n\n  return(\n    <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" button=\"Сохранить\" \n    isOpen={props.isOpen} \n    onClose={props.onClose}\n    onSubmit={handleSubmit} >\n\n      {!userNameValid && <div> userName invalid </div>}\n\n      <input className=\"popup__input\" minLength=\"2\" maxLength=\"40\" id=\"input-name\" name=\"userName\" type=\"text\" \n      value={userName || ''} \n      onChange={handleInputChange} \n      required />\n      <span className=\"popup__input-error\" id=\"input-name-error\"></span>\n\n      {!userDescriptionValid && <div> userDescription invalid </div>}\n      \n      <input className=\"popup__input\" minLength=\"2\" maxLength=\"200\" id=\"input-job\" name=\"userJob\" type=\"text\" \n      value={userDescription || ''} \n      onChange={handleInputChange} \n      required />\n      <span className=\"popup__input-error\" id=\"input-job-error\"></span>\n    </PopupWithForm>\n  ); \n}"]},"metadata":{},"sourceType":"module"}