{"ast":null,"code":"export var BASE_URL='https://http://localhost:3000';var checkResult=function checkResult(response){if(response.ok){return response.json();};return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(response.status));};export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(response){return checkResult(response);});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(response){return checkResult(response);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json',\"Authorization\":\"Bearer \".concat(token)}}).then(function(response){return checkResult(response);});};","map":{"version":3,"sources":["/Users/mac/Documents/dev/react-mesto-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","checkResult","response","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAc,CAChC,GAAGA,QAAQ,CAACC,EAAZ,CAAgB,CACd,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACD,EACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,QAAQ,CAACK,MAAnC,EAAP,CACD,CALD,CAOA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,KAAX,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CACjCY,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CAL2B,CAAvB,CAAL,CAONO,IAPM,CAOD,SAACf,QAAD,QAAcD,CAAAA,WAAW,CAACC,QAAD,CAAzB,EAPC,CAAP,CAQD,CATM,CAWP,MAAO,IAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,QAAD,CAAWC,KAAX,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CACjCY,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CAL2B,CAAvB,CAAL,CAONO,IAPM,CAOD,SAACf,QAAD,QAAcD,CAAAA,WAAW,CAACC,QAAD,CAAzB,EAPC,CAAP,CAQD,CATM,CAWP,MAAO,IAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACnC,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACnCY,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iCAA4BO,KAA5B,CAFO,CAF0B,CAAzB,CAAL,CAONH,IAPM,CAOD,SAACf,QAAD,QAAcD,CAAAA,WAAW,CAACC,QAAD,CAAzB,EAPC,CAAP,CAQD,CATM","sourcesContent":["export const BASE_URL = 'https://http://localhost:3000';\n\nconst checkResult = (response) => {\n  if(response.ok) {\n    return response.json();\n  };\n  return Promise.reject(`Ошибка: ${response.status}`);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({password, email}),\n  })\n  .then((response) => checkResult(response))\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({password, email}),\n  })\n  .then((response) => checkResult(response))\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\" : `Bearer ${token}`,\n    },\n  })\n  .then((response) => checkResult(response))\n};"]},"metadata":{},"sourceType":"module"}